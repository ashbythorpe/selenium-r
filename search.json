[{"path":"https://ashbythorpe.github.io/selenium-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 selenium authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/articles/debugging.html","id":"starting-the-client","dir":"Articles","previous_headings":"","what":"Starting the client","title":"Debugging selenium","text":"initializing SeleniumSession fails, often useful look logs server. ran java -jar ... command manually, able see logs, used selenium_server(), need use stdout argument capture output command: can look log file see output command.","code":"# Where `log.txt` is an already created file where you want to store the logs. selenium_server(stdout = \"log.txt\")"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/debugging.html","id":"port-and-ip-address","dir":"Articles","previous_headings":"Starting the client","what":"Port and IP address","title":"Debugging selenium","text":"One reason can’t connect server port IP address using wrong. get IP address port number server using, need look server logs. see line like: INFO [Standalone.execute] - Started Selenium Standalone ... (revision ...): http://<IP>:<PORT> URL end message can used extract IP address port number, can passed host port arguments. example, URL : http://172.17.0.1/4444, run:","code":"session <- SeleniumSession$new(host = \"172.17.0.1\", port = 4444)"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/debugging.html","id":"using-a-different-debugging-port-for-chrome","dir":"Articles","previous_headings":"Starting the client","what":"Using a different debugging port for Chrome","title":"Debugging selenium","text":"using Chrome, see browser open, call SeleniumSession$new() times , may need use different debugging port. example:","code":"session <- SeleniumSession$new(   browser = \"chrome\",   capabilities = list(     `goog:chromeOptions` = list(       args = list(\"remote-debugging-port=9222\")     )   ) )"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/debugging.html","id":"increasing-devshm-size-when-using-docker","dir":"Articles","previous_headings":"Starting the client","what":"Increasing /dev/shm/ size when using docker","title":"Debugging selenium","text":"running selenium using docker, may need increase size /dev/shm/ avoid running memory. issue usually happens using Chrome, usually results message like session deleted page crash. can use --shm-size selenium docker images fix issue. example: docker run --shm-size=\"2g\" selenium/standalone-chrome:<version>","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenium-r/articles/debugging.html","id":"stale-element-reference-errors","dir":"Articles","previous_headings":"Other common errors","what":"Stale element reference errors","title":"Debugging selenium","text":"point, using selenium, encounter following error: error common automating website. Selenium telling element previously identified longer exists. websites, especially complex ones, DOM constantly updating , constantly invalidating references elements. error particularly annoying one, can happen time impossible predict. One way deal error use elements soon created, keeping references elements sure invalidated. example, want click element twice, second-long gap , may want consider fetching element time, rather sharing reference actions. However, solution infallible. find encountering error lot, may sign high-level package, can deal issue (e.g. selenider), needed.","code":"#> Error in `element$click()`: #> ! Stale element reference. #> ✖ The element with the reference <...> is not known in the current browsing context #> Caused by error in `httr2::req_perform()`: #> ! HTTP 404 Not Found. #> Run `rlang::last_trace()` to see where the error occurred."},{"path":"https://ashbythorpe.github.io/selenium-r/articles/selenium.html","id":"navigation","dir":"Articles","previous_headings":"","what":"Navigation","title":"Getting Started with selenium","text":"Use SeleniumSession$back() SeleniumSession$forward() navigate back forward navigation history, SeleniumSession$refresh() reload current page","code":"session$back()  session$forward()  session$refresh()  session$current_url() #> [1] \"https://www.tidyverse.org/\""},{"path":"https://ashbythorpe.github.io/selenium-r/articles/selenium.html","id":"elements","dir":"Articles","previous_headings":"","what":"Elements","title":"Getting Started with selenium","text":"interact webpage, first need find elements want interact . can using SeleniumSession$find_element() SeleniumSession$find_elements(). functions take two arguments: using value. using specifies method want use find element, value string want search . default, CSS selectors used (value = \"css selector\"), provide simple concise way find elements: Use \"name\" select element tag name name. (e.g. div). Use \"#id\" select element id id. Use \".class\" select element class class. Use square brackets select elements using properties. example, \"input[type='text']\" selects text input element. information using CSS selectors, see: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_selectors/Selectors_and_combinators. Another notable way select elements using XPaths. XPaths can slightly verbose CSS selectors, powerful. Use using = \"xpath\" use XPaths. Use //tagname select element tag name tagname. Use //tagname[@attribute='value'] select element tag name tagname attribute attribute value value. Use //tagname/childtagname (single slash) select element direct child tagname element. Similarly, /tagname can used select element top level DOM. Use //tagname//childtagname select element child tagname element, directly DOM. learn use XPaths, see: https://www.w3schools.com/xml/xpath_intro.asp values using can take fairly self-explanatory (e.g. \"tag name\") match elements tag name given value. element, can locate sub-elements using WebElement$find_element() WebElement$find_elements(), now select element’s children. especially useful website make much use classes ids label elements uniquely. example, following code find hex images Tidyverse home page:","code":"hex_stickers <- session$   find_element(using = \"css selector\", value = \".hexBadges\")$   find_elements(using = \"css selector\", value = \"img\")"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/selenium.html","id":"element-properties","dir":"Articles","previous_headings":"","what":"Element properties","title":"Getting Started with selenium","text":"element, many properties can request . Use WebElement$get_tag_name() get tag name element: Use WebElement$get_text() get text inside element: WebElement$get_attribute() WebElement$get_property() return value property element (see documentation difference two). WebElement$get_css_value() return computed CSS property element: Use WebElement$get_rect() get coordinates size element: Use WebElement$is_selected(), WebElement$is_enabled() WebElement$is_displayed() check element currently selected, enabled visible.","code":"element <- hex_stickers[[1]] element$get_tag_name() #> [1] \"img\" element$get_text() #> [1] \"\" element$get_attribute(\"src\") #> [1] \"/css/images/hex/dplyr.png\"  element$get_property(\"src\") #> [1] \"https://www.tidyverse.org/css/images/hex/dplyr.png\" element$get_css_value(\"background-color\") #> [1] \"rgba(0, 0, 0, 0)\" element$get_rect() #> $x #> [1] 192 #>  #> $y #> [1] 197.5 #>  #> $width #> [1] 120 #>  #> $height #> [1] 139 element$is_selected() #> [1] FALSE  element$is_enabled() #> [1] TRUE  element$is_displayed() #> [1] TRUE"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/selenium.html","id":"interacting-with-an-element","dir":"Articles","previous_headings":"","what":"Interacting with an element","title":"Getting Started with selenium","text":"many different ways interact element. Use WebElement$click() click element: Use WebElement$send_keys() send text input element: can use keys object send advanced key combinations element. example, code selects text inside element (<Ctrl->), deletes . However, generally, want clear input element, use WebElement$clear().","code":"element$click() input <- session$find_element(using = \"css selector\", value = \"input[type='search']\")  input$send_keys(\"filter\") input$send_keys(keys$control, \"a\", keys$backspace) input$clear()"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/selenium.html","id":"custom-javascript","dir":"Articles","previous_headings":"","what":"Custom JavaScript","title":"Getting Started with selenium","text":"Use SeleniumSession$execute_script() execute custom JavaScript. extra arguments passed script arguments array, items can returned explicitly using return. WebElements can also passed returned. SeleniumSession$execute_async_script() provided need interact asynchronous JavaScript API, much less commonly used.","code":"session$execute_script(\"return arguments[0] + arguments[1];\", 2, 2) #> [1] 4 session$execute_script(\"return arguments[0].parentElement;\", input) #> <WebElement> #>   Public: #>     clear: function ()  #>     click: function ()  #>     clone: function (deep = FALSE)  #>     computed_label: function ()  #>     computed_role: function ()  #>     find_element: function (using = c(\"css selector\", \"xpath\", \"tag name\", \"link text\",  #>     find_elements: function (using = c(\"css selector\", \"xpath\", \"tag name\", \"link text\",  #>     get_attribute: function (name, request_body = NULL)  #>     get_css_value: function (name, request_body = NULL)  #>     get_property: function (name, request_body = NULL)  #>     get_rect: function ()  #>     get_tag_name: function ()  #>     get_text: function ()  #>     id: 7873b9f1-7588-4118-abd3-49a8a3d483f6 #>     initialize: function (session_id, req, verbose, id)  #>     is_displayed: function ()  #>     is_enabled: function ()  #>     is_selected: function ()  #>     screenshot: function ()  #>     send_keys: function (..., request_body = NULL)  #>     shadow_root: function ()  #>     toJSON: function ()  #>   Private: #>     req: httr2_request #>     session_id: d80f191a-2702-4c2f-a180-5a6a837af5a7 #>     verbose: FALSE"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/selenium.html","id":"windows-and-tabs","dir":"Articles","previous_headings":"","what":"Windows and Tabs","title":"Getting Started with selenium","text":"SeleniumSession object limited single window/tab. Use SeleniumSession$new_window() create new window tab, using type argument choose two: window/tab handle: string uniquely identifies . Use SeleniumSession$window_handle() get handle current window, SeleniumSession$window_handles() get handle every open window/tab. new window/tab created, automatically switched . Use SeleniumSession$switch_to_window() switch window/tab specific handle: Use SeleniumSession$close_window() close window/tab:","code":"tab <- session$new_window(type = \"tab\")  window <- session$new_window(type = \"window\")  tab #> $handle #> [1] \"a82d17f7-413f-4a5a-ae65-d5d51ec58fd2\" #>  #> $type #> [1] \"tab\"  window #> $handle #> [1] \"099dfbc5-4d63-4288-8f24-c826b65a8c8f\" #>  #> $type #> [1] \"window\" current_handle <- session$window_handle()  current_handle #> [1] \"de699315-66a0-4b7c-918e-1997c55f3615\"  session$window_handles() #> [[1]] #> [1] \"de699315-66a0-4b7c-918e-1997c55f3615\" #>  #> [[2]] #> [1] \"a82d17f7-413f-4a5a-ae65-d5d51ec58fd2\" #>  #> [[3]] #> [1] \"099dfbc5-4d63-4288-8f24-c826b65a8c8f\" session$switch_to_window(window$handle) session$close_window() #> [[1]] #> [1] \"de699315-66a0-4b7c-918e-1997c55f3615\" #>  #> [[2]] #> [1] \"a82d17f7-413f-4a5a-ae65-d5d51ec58fd2\"  # Switch to an open window session$switch_to_window(current_handle)"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/selenium.html","id":"iframes-and-the-shadow-dom","dir":"Articles","previous_headings":"","what":"iframes and the Shadow DOM","title":"Getting Started with selenium","text":"many methods web developers use embed self-contained HTML documents elements page. One iframe element, allowing nested browsing context embedded page. example, iframes often used embed video players site. Use SeleniumSession$switch_to_frame() switch frame select elements within . can pass index frame, iframe element . Use SeleniumSession$switch_to_parent_frame() switch parent frame current one, use SeleniumSession$switch_to_frame() arguments switch top-level browsing context: Shadow DOM another way websites embed content page, time element. element shadow root, use WebElement$shadow_root() get corresponding ShadowRoot object. can find sub-elements within shadow root using ShadowRoot$find_element() ShadowRoot$find_elements().","code":"session$navigate(\"https://www.youtube.com\")  iframe <- session$find_element(using = \"css selector\", value = \"iframe\")  session$switch_to_frame(iframe) session$switch_to_parent_frame()"},{"path":"https://ashbythorpe.github.io/selenium-r/articles/selenium.html","id":"closing-the-session","dir":"Articles","previous_headings":"","what":"Closing the session","title":"Getting Started with selenium","text":"Always remember close session finished using :","code":"session$close()"},{"path":"https://ashbythorpe.github.io/selenium-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ashby Thorpe. Author, maintainer, copyright holder.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thorpe (2023). selenium: Low-Level Browser Automation Interface. https://ashbythorpe.github.io/selenium-r/, https://github.com/ashbythorpe/selenium-r.","code":"@Manual{,   title = {selenium: Low-Level Browser Automation Interface},   author = {Ashby Thorpe},   year = {2023},   note = {https://ashbythorpe.github.io/selenium-r/, https://github.com/ashbythorpe/selenium-r}, }"},{"path":"https://ashbythorpe.github.io/selenium-r/index.html","id":"selenium","dir":"","previous_headings":"","what":"Low-Level Browser Automation Interface","title":"Low-Level Browser Automation Interface","text":"selenium tool automation web browsers. low-level interface WebDriver specification, --date alternative RSelenium.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Low-Level Browser Automation Interface","text":"However, must also selenium server installed running (see ).","code":"# Install selenider from CRAN install.packages(\"selenium\")  # Or the development version from Github # install.packages(\"pak\") pak::pak(\"ashbythorpe/selenium-r\")"},{"path":"https://ashbythorpe.github.io/selenium-r/index.html","id":"starting-the-server","dir":"","previous_headings":"","what":"Starting the server","title":"Low-Level Browser Automation Interface","text":"selenium instance consists two parts: client server. selenium package provides client. means start server . must: Install browser want automate (e.g. Chrome, Firefox, Edge). Download Java. many different ways download start server, one provided selenium: download latest version server start . default, server file stored temporary directory, meaning deleted session closed. want server persist, meaning don’t re-download server time, can use temp argument: can also manually want: Download latest .jar file Selenium Server. navigating latest GitHub release page (https://github.com/SeleniumHQ/selenium/releases/latest/), scrolling Assets section, downloading file named selenium-server-standalone-<VERSION>.jar (<VERSION> latest release version). Make sure directory file downloaded. terminal, run java -jar selenium-server-standalone-<VERSION>.jar standalone --selenium-manager true, replacing <VERSION> version number downloaded. download drivers need communicate server browser, start server. ways starting Selenium Server: Using docker start server. See https://github.com/SeleniumHQ/docker-selenium. recommended non-interactive context (e.g. GitHub Actions). Using wdman package start server R, using wdman::selenium(). Note time writing, package work latest version Chrome.","code":"library(selenium) server <- selenium_server() server <- selenium_server(temp = FALSE)"},{"path":"https://ashbythorpe.github.io/selenium-r/index.html","id":"starting-the-client","dir":"","previous_headings":"","what":"Starting the client","title":"Low-Level Browser Automation Interface","text":"server instance started, move R load selenium. Client sessions can started using SeleniumSession$new() default, connect Firefox, can use browser argument specify different browser like. , use capabilities argument specify options browser. , remote-debugging-port argument Chrome used make sure port browser uses conflict others (may necessary Chrome working default). doesn’t work, please see Debugging Selenium article information.","code":"library(selenium) session <- SeleniumSession$new() session <- SeleniumSession$new() session <- SeleniumSession$new(   browser = \"chrome\",   capabilities = list(     `goog:chromeOptions` = list(       args = list(\"remote-debugging-port=9222\")     )   ) )"},{"path":"https://ashbythorpe.github.io/selenium-r/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Low-Level Browser Automation Interface","text":"session successfully started, can use session object control browser. , dynamically navigate R project homepage. detailed introduction using selenium, see Getting Started article. Note selenium low-level mainly aimed towards developers. wanting use browser automation web scraping testing, may want take look selenider instead.","code":"session$navigate(\"https://www.r-project.org/\") session$   find_element(using = \"css selector\", value = \".row\")$   find_element(using = \"css selector\", value = \"ul\")$   find_element(using = \"css selector\", value = \"a\")$   click()  session$   find_element(using = \"css selector\", value = \".row\")$   find_elements(using = \"css selector\", value = \"div\")[[2]]$   find_element(using = \"css selector\", value = \"p\")$   get_text() #> [1] \"\"  session$close()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a Selenium Client session — SeleniumSession","title":"Start a Selenium Client session — SeleniumSession","text":"class represents client Selenium session. work Selenium server instance running. get error, use selenium_server_available() check server running. See package README information, use selenium_server() try start server automatically.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Start a Selenium Client session — SeleniumSession","text":"id id session, generated session started.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Start a Selenium Client session — SeleniumSession","text":"SeleniumSession$new() SeleniumSession$create_webelement() SeleniumSession$create_shadowroot() SeleniumSession$close() SeleniumSession$status() SeleniumSession$get_timeouts() SeleniumSession$set_timeouts() SeleniumSession$navigate() SeleniumSession$current_url() SeleniumSession$back() SeleniumSession$forward() SeleniumSession$refresh() SeleniumSession$title() SeleniumSession$window_handle() SeleniumSession$close_window() SeleniumSession$switch_to_window() SeleniumSession$window_handles() SeleniumSession$new_window() SeleniumSession$switch_to_frame() SeleniumSession$switch_to_parent_frame() SeleniumSession$get_window_rect() SeleniumSession$set_window_rect() SeleniumSession$maximize_window() SeleniumSession$minimize_window() SeleniumSession$fullscreen_window() SeleniumSession$get_active_element() SeleniumSession$find_element() SeleniumSession$find_elements() SeleniumSession$get_page_source() SeleniumSession$execute_script() SeleniumSession$execute_async_script() SeleniumSession$get_cookies() SeleniumSession$get_cookie() SeleniumSession$add_cookie() SeleniumSession$delete_cookie() SeleniumSession$delete_all_cookies() SeleniumSession$perform_actions() SeleniumSession$release_actions() SeleniumSession$dismiss_alert() SeleniumSession$accept_alert() SeleniumSession$get_alert_text() SeleniumSession$send_alert_text() SeleniumSession$screenshot() SeleniumSession$print_page() SeleniumSession$clone()","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Start a Selenium Client session — SeleniumSession","text":"Create Selenium session: opening browser can controlled Selenium client.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$new(   browser = \"firefox\",   port = 4444L,   host = \"localhost\",   verbose = FALSE,   capabilities = NULL,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"browser name browser use (e.g. \"chrome\", \"firefox\", \"edge\"). port port Selenium server using, can connect . host host Selenium server running . usually 'localhost' (.e. machine). verbose Whether print web requests sent responses. capabilities list capabilities pass Selenium server, combine defaults generated using browser. request_body list request body parameters pass Selenium server. Overrides capabilities.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"SeleniumSession object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new(verbose = TRUE)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-create-webelement-","dir":"Reference","previous_headings":"","what":"Method create_webelement()","title":"Start a Selenium Client session — SeleniumSession","text":"Create WebElement object using parameters current session.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$create_webelement(id)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"id element id.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"WebElement object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  element <- session$find_element(using = \"css selector\", value = \"*\")  element2 <- session$create_webelement(id = element$id)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-create-shadowroot-","dir":"Reference","previous_headings":"","what":"Method create_shadowroot()","title":"Start a Selenium Client session — SeleniumSession","text":"Create ShadowRoot object using parameters current session.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$create_shadowroot(id)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"id shadow root id.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"ShadowRoot object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  shadow_root <- session$create_shadowroot(id = \"foo\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"Start a Selenium Client session — SeleniumSession","text":"Close current session. session closed, methods longer work. However, Selenium server still running.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$close()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-status-","dir":"Reference","previous_headings":"","what":"Method status()","title":"Start a Selenium Client session — SeleniumSession","text":"Get status Selenium server. Unlike methods, method independent session (meaning can used even SeleniumSession$close() called). identical get_server_status(), uses host, port verbose options passed session, convenience.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$status()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"list can (may always) contain following fields: ready: Whether server ready connected . always returned server. message: message status server. uptime: long server running. nodes: Information slots server can take.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$status()  session$close()  session$status() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-get-timeouts-","dir":"Reference","previous_headings":"","what":"Method get_timeouts()","title":"Start a Selenium Client session — SeleniumSession","text":"Get timeouts current session. three types timeouts: session script timeout: amount time server wait scripts run. Defaults 3 seconds. page load timeout: amount time server wait page load. Defaults 30 seconds. implicit wait: amount time server wait elements located, elements become interactable required. Defaults 0 seconds.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$get_timeouts()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"list three items: script, page_load, implicit.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{  session <- SeleniumSession$new()  session$get_timeouts()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-set-timeouts-","dir":"Reference","previous_headings":"","what":"Method set_timeouts()","title":"Start a Selenium Client session — SeleniumSession","text":"Set timeouts current session. types timeouts defined SeleniumSession$get_timeouts().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$set_timeouts(   script = NULL,   page_load = NULL,   implicit_wait = NULL,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"script amount time wait scripts. default, set. page_load amount time wait page load. implicit_wait amount time wait elements page. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$set_timeouts(script = 100)  session$get_timeouts()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-navigate-","dir":"Reference","previous_headings":"","what":"Method navigate()","title":"Start a Selenium Client session — SeleniumSession","text":"Navigate URL.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$navigate(url, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"url URL navigate . Must begin protocol (e.g. 'https://'). request_body list request body parameters pass Selenium server, overriding default body web request.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-current-url-","dir":"Reference","previous_headings":"","what":"Method current_url()","title":"Start a Selenium Client session — SeleniumSession","text":"Get current URL.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$current_url()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"URL current page.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$current_url()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-back-","dir":"Reference","previous_headings":"","what":"Method back()","title":"Start a Selenium Client session — SeleniumSession","text":"Go back navigation history.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$back()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$navigate(\"https://www.tidyverse.org\")  session$back()  session$current_url()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-forward-","dir":"Reference","previous_headings":"","what":"Method forward()","title":"Start a Selenium Client session — SeleniumSession","text":"Go forward navigation history.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$forward()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-10","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$navigate(\"https://www.tidyverse.org\")  session$back()  session$forward()  session$current_url()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-refresh-","dir":"Reference","previous_headings":"","what":"Method refresh()","title":"Start a Selenium Client session — SeleniumSession","text":"Reload current page.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$refresh()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-11","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$refresh()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-title-","dir":"Reference","previous_headings":"","what":"Method title()","title":"Start a Selenium Client session — SeleniumSession","text":"Get title current page.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$title()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"title current page.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-12","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$title()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-window-handle-","dir":"Reference","previous_headings":"","what":"Method window_handle()","title":"Start a Selenium Client session — SeleniumSession","text":"Get current window handle.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$window_handle()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"handle current window (string).","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-13","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$window_handle()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-close-window-","dir":"Reference","previous_headings":"","what":"Method close_window()","title":"Start a Selenium Client session — SeleniumSession","text":"Close current window.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$close_window()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-14","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$new_window()  session$close_window()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-switch-to-window-","dir":"Reference","previous_headings":"","what":"Method switch_to_window()","title":"Start a Selenium Client session — SeleniumSession","text":"Switch specific window.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$switch_to_window(handle, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"handle handle window switch . request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-15","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  handle <- session$window_handle()  handle2 <- session$new_window()$handle  session$switch_to_window(handle)  session$switch_to_window(handle2)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-window-handles-","dir":"Reference","previous_headings":"","what":"Method window_handles()","title":"Start a Selenium Client session — SeleniumSession","text":"Get handles open windows.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$window_handles()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"handles open windows (list strings).","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-16","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  handles <- session$window_handles()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-new-window-","dir":"Reference","previous_headings":"","what":"Method new_window()","title":"Start a Selenium Client session — SeleniumSession","text":"Create new window. Note window automatically switched .","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$new_window(type = c(\"tab\", \"window\"), request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"type Whether create tab window. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"list containing two elements: handle: handle new window. type: type window. (\"tab\" \"window\").","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-17","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  handle <- session$new_window()$handle  session$switch_to_window(handle)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-switch-to-frame-","dir":"Reference","previous_headings":"","what":"Method switch_to_frame()","title":"Start a Selenium Client session — SeleniumSession","text":"Frames allow split window multiple sections, section can load separate HTML document. function allows switch specific frame, given ID, meaning frame become current browsing context.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$switch_to_frame(id = NA, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"id ID frame switch . default, top-level browsing context switched (.e. frame). can also WebElement object, case frame contains said element switched . request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-18","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$switch_to_frame()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-switch-to-parent-frame-","dir":"Reference","previous_headings":"","what":"Method switch_to_parent_frame()","title":"Start a Selenium Client session — SeleniumSession","text":"Switch parent frame current frame.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$switch_to_parent_frame()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-19","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$switch_to_frame()  session$switch_to_parent_frame()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-get-window-rect-","dir":"Reference","previous_headings":"","what":"Method get_window_rect()","title":"Start a Selenium Client session — SeleniumSession","text":"Get size position current window.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$get_window_rect()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"list containing four elements: x: x position window relative left screen. y: y position window relative top screen. width: width window. height: height window.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-20","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$get_window_rect()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-set-window-rect-","dir":"Reference","previous_headings":"","what":"Method set_window_rect()","title":"Start a Selenium Client session — SeleniumSession","text":"Set size position current window.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$set_window_rect(   width = NULL,   height = NULL,   x = NULL,   y = NULL,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"width width window. height height window. x x position window relative left screen. y y position window relative top screen. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-21","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$set_window_rect(width = 800, height = 600, x = 2, y = 3)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-maximize-window-","dir":"Reference","previous_headings":"","what":"Method maximize_window()","title":"Start a Selenium Client session — SeleniumSession","text":"Maximize current window. makes window maximum size can , without full screen","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$maximize_window()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-22","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$maximize_window()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-minimize-window-","dir":"Reference","previous_headings":"","what":"Method minimize_window()","title":"Start a Selenium Client session — SeleniumSession","text":"Minimize current window. hides window.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$minimize_window()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-23","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$minimize_window()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-fullscreen-window-","dir":"Reference","previous_headings":"","what":"Method fullscreen_window()","title":"Start a Selenium Client session — SeleniumSession","text":"Make window full screen.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$fullscreen_window()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-24","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$fullscreen_window()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-get-active-element-","dir":"Reference","previous_headings":"","what":"Method get_active_element()","title":"Start a Selenium Client session — SeleniumSession","text":"Get currently active element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$get_active_element()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"WebElement object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-25","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$get_active_element()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-find-element-","dir":"Reference","previous_headings":"","what":"Method find_element()","title":"Start a Selenium Client session — SeleniumSession","text":"Find first element matching selector.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$find_element(   using = c(\"css selector\", \"xpath\", \"tag name\", \"link text\", \"partial link text\"),   value,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"using type selector use. value value selector: string. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"WebElement object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-26","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")  session$find_element(using = \"xpath\", value = \"//div[contains(@class, 'col-xs')]/h1\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-find-elements-","dir":"Reference","previous_headings":"","what":"Method find_elements()","title":"Start a Selenium Client session — SeleniumSession","text":"Find elements matching selector.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$find_elements(   using = c(\"css selector\", \"xpath\", \"tag name\", \"link text\", \"partial link text\"),   value,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"using type selector use. value value selector: string. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"list WebElement objects.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-27","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_elements(using = \"css selector\", value = \"h1\")  session$find_elements(using = \"xpath\", value = \"//h1\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-get-page-source-","dir":"Reference","previous_headings":"","what":"Method get_page_source()","title":"Start a Selenium Client session — SeleniumSession","text":"Get HTML source current page, serialized string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$get_page_source()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-28","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$get_page_source()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-execute-script-","dir":"Reference","previous_headings":"","what":"Method execute_script()","title":"Start a Selenium Client session — SeleniumSession","text":"Execute JavaScript script.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$execute_script(x, ..., request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"x script execute. return value, explicitly, e.g. return 1. ... Additional arguments pass script. can accessed script using arguments array. Can WebElement objects lists objects, converted nodes. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"return value script. Nodes lists nodes converted WebElement objects.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-29","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$execute_script(\"return 1\")  session$execute_script(\"return arguments[0] + arguments[1]\", 1, 2)  element <- session$find_element(value = \"*\")  session$execute_script(\"return arguments[0]\", element)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-execute-async-script-","dir":"Reference","previous_headings":"","what":"Method execute_async_script()","title":"Start a Selenium Client session — SeleniumSession","text":"Execute asynchronous JavaScript script, waiting value returned.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$execute_async_script(x, ..., request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"x script execute. Unlike execute_script(). return value using callback function, can accessed using arguments[arguments.length - 1]. example, return 1, write arguments[arguments.length - 1](1). allows write asynchronous JavaScript, treat like synchronous R code. ... Additional arguments pass script. Can WebElement objects lists objects, converted nodes. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"return value script. Nodes lists nodes converted WebElement objects.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-30","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$execute_async_script(\"   let callback = arguments[arguments.length - 1];   callback(1) \")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-get-cookies-","dir":"Reference","previous_headings":"","what":"Method get_cookies()","title":"Start a Selenium Client session — SeleniumSession","text":"Get cookies.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$get_cookies()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"list cookies. cookie list name value field, along optional fields.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-31","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$get_cookies()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-get-cookie-","dir":"Reference","previous_headings":"","what":"Method get_cookie()","title":"Start a Selenium Client session — SeleniumSession","text":"Get specific cookie using name.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$get_cookie(name, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"name name cookie. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"cookie object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-32","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$add_cookie(list(name = \"foo\", value = \"bar\"))  session$get_cookie(\"foo\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-add-cookie-","dir":"Reference","previous_headings":"","what":"Method add_cookie()","title":"Start a Selenium Client session — SeleniumSession","text":"Add cookie cookie store current document.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$add_cookie(cookie, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"cookie cookie object add: list must contain name value field. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-33","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$add_cookie(list(name = \"my_cookie\", value = \"1\"))  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-delete-cookie-","dir":"Reference","previous_headings":"","what":"Method delete_cookie()","title":"Start a Selenium Client session — SeleniumSession","text":"Delete cookie using name.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$delete_cookie(name, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"name name cookie. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-34","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$add_cookie(list(name = \"foo\", value = \"bar\"))  session$delete_cookie(\"foo\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-delete-all-cookies-","dir":"Reference","previous_headings":"","what":"Method delete_all_cookies()","title":"Start a Selenium Client session — SeleniumSession","text":"Delete cookies cookie store current document.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$delete_all_cookies()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-35","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$delete_all_cookies()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-perform-actions-","dir":"Reference","previous_headings":"","what":"Method perform_actions()","title":"Start a Selenium Client session — SeleniumSession","text":"Perform sequence actions.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$perform_actions(   actions,   release_actions = TRUE,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"actions selenium_actions_stream object, created using actions_stream(). release_actions Whether call release_actions() performing actions. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-36","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-36","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  actions <- actions_stream(   actions_press(keys$enter),   actions_pause(0.5),   actions_release(keys$enter) )  session$perform_actions(actions)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-release-actions-","dir":"Reference","previous_headings":"","what":"Method release_actions()","title":"Start a Selenium Client session — SeleniumSession","text":"Release keys pointers pressed using perform_actions().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$release_actions()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-37","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-37","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  actions <- actions_stream(   actions_press(\"a\") )  session$perform_actions(actions, release_actions = FALSE)  session$release_actions()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-dismiss-alert-","dir":"Reference","previous_headings":"","what":"Method dismiss_alert()","title":"Start a Selenium Client session — SeleniumSession","text":"Dismiss current alert, present.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$dismiss_alert()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-38","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-38","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$execute_script(\"alert('hello')\")  session$dismiss_alert()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-accept-alert-","dir":"Reference","previous_headings":"","what":"Method accept_alert()","title":"Start a Selenium Client session — SeleniumSession","text":"Accept current alert, present.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$accept_alert()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-39","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-39","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$execute_script(\"alert('hello')\")  session$accept_alert()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-get-alert-text-","dir":"Reference","previous_headings":"","what":"Method get_alert_text()","title":"Start a Selenium Client session — SeleniumSession","text":"Get message current alert, present.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$get_alert_text()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-40","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"message current alert (string).","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-40","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$execute_script(\"alert('hello')\")  session$get_alert_text()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-send-alert-text-","dir":"Reference","previous_headings":"","what":"Method send_alert_text()","title":"Start a Selenium Client session — SeleniumSession","text":"Send text current alert, present. Useful alert prompt.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$send_alert_text(text, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"text text send. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-41","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"session object, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-41","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$execute_script(\"prompt('Enter text:')\")  session$send_alert_text(\"hello\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-screenshot-","dir":"Reference","previous_headings":"","what":"Method screenshot()","title":"Start a Selenium Client session — SeleniumSession","text":"Take screenshot current page.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$screenshot()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-42","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"base64-encoded PNG screenshot, string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-42","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$screenshot()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-print-page-","dir":"Reference","previous_headings":"","what":"Method print_page()","title":"Start a Selenium Client session — SeleniumSession","text":"Render current page PDF.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$print_page(   orientation = c(\"portrait\", \"landscape\"),   scale = 1,   background = FALSE,   width = NULL,   height = NULL,   margin = NULL,   footer = NULL,   header = NULL,   shrink_to_fit = NULL,   page_ranges = NULL,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"orientation page orientation, either \"portrait\" \"landscape\". scale page scale, number 0.1 2. background Whether print background page. width page width, inches. height page height, inches. margin page margin, inches. Either number, case margin sides set value, list four numbers, names left, right, top, bottom, case margin side set individually. footer page footer, string. header page header, string. shrink_to_fit Whether shrink page fit width height. page_ranges list page ranges (e.g. \"1\", \"1-3\") print. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"returns-43","dir":"Reference","previous_headings":"","what":"Returns","title":"Start a Selenium Client session — SeleniumSession","text":"base64-encoded PDF, string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"examples-43","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$print_page()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Start a Selenium Client session — SeleniumSession","text":"objects class cloneable method.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"SeleniumSession$clone(deep = FALSE)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Selenium Client session — SeleniumSession","text":"deep Whether make deep clone.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/SeleniumSession.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Selenium Client session — SeleniumSession","text":"","code":"## ------------------------------------------------ ## Method `SeleniumSession$new` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new(verbose = TRUE)  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$create_webelement` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  element <- session$find_element(using = \"css selector\", value = \"*\")  element2 <- session$create_webelement(id = element$id)  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$create_shadowroot` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  shadow_root <- session$create_shadowroot(id = \"foo\")  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$close` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$status` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$status()  session$close()  session$status() }  ## ------------------------------------------------ ## Method `SeleniumSession$get_timeouts` ## ------------------------------------------------  if (FALSE) {  session <- SeleniumSession$new()  session$get_timeouts()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$set_timeouts` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$set_timeouts(script = 100)  session$get_timeouts()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$navigate` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$current_url` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$current_url()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$back` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$navigate(\"https://www.tidyverse.org\")  session$back()  session$current_url()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$forward` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$navigate(\"https://www.tidyverse.org\")  session$back()  session$forward()  session$current_url()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$refresh` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$refresh()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$title` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$title()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$window_handle` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$window_handle()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$close_window` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$new_window()  session$close_window()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$switch_to_window` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  handle <- session$window_handle()  handle2 <- session$new_window()$handle  session$switch_to_window(handle)  session$switch_to_window(handle2)  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$window_handles` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  handles <- session$window_handles()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$new_window` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  handle <- session$new_window()$handle  session$switch_to_window(handle)  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$switch_to_frame` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$switch_to_frame()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$switch_to_parent_frame` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$switch_to_frame()  session$switch_to_parent_frame()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$get_window_rect` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$get_window_rect()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$set_window_rect` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$set_window_rect(width = 800, height = 600, x = 2, y = 3)  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$maximize_window` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$maximize_window()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$minimize_window` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$minimize_window()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$fullscreen_window` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$fullscreen_window()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$get_active_element` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$get_active_element()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$find_element` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")  session$find_element(using = \"xpath\", value = \"//div[contains(@class, 'col-xs')]/h1\")  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$find_elements` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_elements(using = \"css selector\", value = \"h1\")  session$find_elements(using = \"xpath\", value = \"//h1\")  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$get_page_source` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$get_page_source()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$execute_script` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$execute_script(\"return 1\")  session$execute_script(\"return arguments[0] + arguments[1]\", 1, 2)  element <- session$find_element(value = \"*\")  session$execute_script(\"return arguments[0]\", element)  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$execute_async_script` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$execute_async_script(\"   let callback = arguments[arguments.length - 1];   callback(1) \")  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$get_cookies` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$get_cookies()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$get_cookie` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$add_cookie(list(name = \"foo\", value = \"bar\"))  session$get_cookie(\"foo\")  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$add_cookie` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$add_cookie(list(name = \"my_cookie\", value = \"1\"))  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$delete_cookie` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$add_cookie(list(name = \"foo\", value = \"bar\"))  session$delete_cookie(\"foo\")  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$delete_all_cookies` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$delete_all_cookies()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$perform_actions` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  actions <- actions_stream(   actions_press(keys$enter),   actions_pause(0.5),   actions_release(keys$enter) )  session$perform_actions(actions)  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$release_actions` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  actions <- actions_stream(   actions_press(\"a\") )  session$perform_actions(actions, release_actions = FALSE)  session$release_actions()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$dismiss_alert` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$execute_script(\"alert('hello')\")  session$dismiss_alert()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$accept_alert` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$execute_script(\"alert('hello')\")  session$accept_alert()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$get_alert_text` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$execute_script(\"alert('hello')\")  session$get_alert_text()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$send_alert_text` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$execute_script(\"prompt('Enter text:')\")  session$send_alert_text(\"hello\")  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$screenshot` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$screenshot()  session$close() }  ## ------------------------------------------------ ## Method `SeleniumSession$print_page` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$print_page()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a shadow root — ShadowRoot","title":"Create a shadow root — ShadowRoot","text":"shadow DOM self-contained DOM tree, contained within another DOM tree. shadow root element contains DOM subtree. class represents shadow root object, allowing select elements within shadow root.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Create a shadow root — ShadowRoot","text":"id id shadow root.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Create a shadow root — ShadowRoot","text":"ShadowRoot$new() ShadowRoot$find_element() ShadowRoot$find_elements() ShadowRoot$toJSON() ShadowRoot$clone()","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Create a shadow root — ShadowRoot","text":"Initialize new ShadowRoot object. called manually: instead use WebElement$shadow_root(), SeleniumSession$create_shadow_root().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shadow root — ShadowRoot","text":"","code":"ShadowRoot$new(session_id, req, verbose, id)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shadow root — ShadowRoot","text":"session_id id session. req, verbose Private fields SeleniumSession object. id id shadow root.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a shadow root — ShadowRoot","text":"ShadowRoot object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a shadow root — ShadowRoot","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   div.attachShadow({mode: 'open'}); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  element$shadow_root()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"method-find-element-","dir":"Reference","previous_headings":"","what":"Method find_element()","title":"Create a shadow root — ShadowRoot","text":"Find element shadow root.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shadow root — ShadowRoot","text":"","code":"ShadowRoot$find_element(   using = c(\"css selector\", \"xpath\", \"tag name\", \"link text\", \"partial link text\"),   value,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shadow root — ShadowRoot","text":"using type selector use. value value selector: string. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a shadow root — ShadowRoot","text":"WebElement object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a shadow root — ShadowRoot","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   const shadowRoot = div.attachShadow({mode: 'open'});   const span = document.createElement('span');   span.textContent = 'Hello';   shadowRoot.appendChild(span); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  shadow_root <- element$shadow_root()  shadow_root$find_element(using = \"css selector\", value = \"span\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"method-find-elements-","dir":"Reference","previous_headings":"","what":"Method find_elements()","title":"Create a shadow root — ShadowRoot","text":"Find elements shadow root matching selector.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shadow root — ShadowRoot","text":"","code":"ShadowRoot$find_elements(   using = c(\"css selector\", \"xpath\", \"tag name\", \"link text\", \"partial link text\"),   value,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shadow root — ShadowRoot","text":"using type selector use. value value selector: string. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a shadow root — ShadowRoot","text":"list WebElement objects.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a shadow root — ShadowRoot","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   const shadowRoot = div.attachShadow({mode: 'open'});   const span = document.createElement('span');   span.textContent = 'Hello';   shadowRoot.appendChild(span);   const p = document.createElement('p');   p.textContent = 'Me too!';   shadowRoot.appendChild(p); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  shadow_root <- element$shadow_root()  shadow_root$find_elements(using = \"css selector\", value = \"*\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"method-tojson-","dir":"Reference","previous_headings":"","what":"Method toJSON()","title":"Create a shadow root — ShadowRoot","text":"Convert element JSON. used SeleniumSession$execute_script().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shadow root — ShadowRoot","text":"","code":"ShadowRoot$toJSON()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a shadow root — ShadowRoot","text":"list, can converted JSON using jsonlite::toJSON().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a shadow root — ShadowRoot","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   div.attachShadow({mode: 'open'}); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  shadow_root <- element$shadow_root()  result <- shadow_root$toJSON()  result  jsonlite::toJSON(result, auto_unbox = TRUE)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Create a shadow root — ShadowRoot","text":"objects class cloneable method.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shadow root — ShadowRoot","text":"","code":"ShadowRoot$clone(deep = FALSE)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shadow root — ShadowRoot","text":"deep Whether make deep clone.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/ShadowRoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a shadow root — ShadowRoot","text":"","code":"## ------------------------------------------------ ## Method `ShadowRoot$new` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   div.attachShadow({mode: 'open'}); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  element$shadow_root()  session$close() }  ## ------------------------------------------------ ## Method `ShadowRoot$find_element` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   const shadowRoot = div.attachShadow({mode: 'open'});   const span = document.createElement('span');   span.textContent = 'Hello';   shadowRoot.appendChild(span); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  shadow_root <- element$shadow_root()  shadow_root$find_element(using = \"css selector\", value = \"span\")  session$close() }  ## ------------------------------------------------ ## Method `ShadowRoot$find_elements` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   const shadowRoot = div.attachShadow({mode: 'open'});   const span = document.createElement('span');   span.textContent = 'Hello';   shadowRoot.appendChild(span);   const p = document.createElement('p');   p.textContent = 'Me too!';   shadowRoot.appendChild(p); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  shadow_root <- element$shadow_root()  shadow_root$find_elements(using = \"css selector\", value = \"*\")  session$close() }  ## ------------------------------------------------ ## Method `ShadowRoot$toJSON` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   div.attachShadow({mode: 'open'}); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  shadow_root <- element$shadow_root()  result <- shadow_root$toJSON()  result  jsonlite::toJSON(result, auto_unbox = TRUE)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a live element — WebElement","title":"Create a live element — WebElement","text":"class represents single element page. created using existing SeleniumSession instance.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Create a live element — WebElement","text":"id id element, used uniquely identify page.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Create a live element — WebElement","text":"WebElement$new() WebElement$shadow_root() WebElement$find_element() WebElement$find_elements() WebElement$is_selected() WebElement$get_attribute() WebElement$get_property() WebElement$get_css_value() WebElement$get_text() WebElement$get_tag_name() WebElement$get_rect() WebElement$is_enabled() WebElement$computed_role() WebElement$computed_label() WebElement$click() WebElement$clear() WebElement$send_keys() WebElement$screenshot() WebElement$is_displayed() WebElement$toJSON() WebElement$clone()","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Create a live element — WebElement","text":"Initialize WebElement object. called manually: instead use SeleniumSession$create_webelement() element id. find elements page, use SeleniumSession$find_element() SeleniumSession$find_elements().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$new(session_id, req, verbose, id)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a live element — WebElement","text":"session_id id session element belongs . req, verbose Private fields SeleniumSession object. id element id.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"WebElement object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  element <- session$find_element(using = \"css selector\", value = \"#download\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-shadow-root-","dir":"Reference","previous_headings":"","what":"Method shadow_root()","title":"Create a live element — WebElement","text":"shadow DOM self-contained DOM tree, contained within another DOM tree. shadow root element contains DOM subtree. method gets shadow root property element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$shadow_root()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"ShadowRoot object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   div.attachShadow({mode: 'open'}); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  shadow_root <- element$shadow_root()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-find-element-","dir":"Reference","previous_headings":"","what":"Method find_element()","title":"Create a live element — WebElement","text":"Find first element matching selector, relative current element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$find_element(   using = c(\"css selector\", \"xpath\", \"tag name\", \"link text\", \"partial link text\"),   value,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a live element — WebElement","text":"using type selector use. value value selector: string. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"WebElement object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  row <- session$find_element(using = \"css selector\", value = \".row\")  logo_container <- row$find_element(using = \"css selector\", value = \"p\")  logo <- logo_container$find_element(using = \"css selector\", value = \"img\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-find-elements-","dir":"Reference","previous_headings":"","what":"Method find_elements()","title":"Create a live element — WebElement","text":"Find elements matching selector, relative current element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$find_elements(   using = c(\"css selector\", \"xpath\", \"tag name\", \"link text\", \"partial link text\"),   value,   request_body = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a live element — WebElement","text":"using type selector use. value value selector: string. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"list WebElement objects.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  row <- session$find_element(using = \"css selector\", value = \".row\")  links <- row$find_elements(using = \"css selector\", value = \"a\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-is-selected-","dir":"Reference","previous_headings":"","what":"Method is_selected()","title":"Create a live element — WebElement","text":"Check element currently selected.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$is_selected()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"boolean value: TRUE FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")$is_selected()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-get-attribute-","dir":"Reference","previous_headings":"","what":"Method get_attribute()","title":"Create a live element — WebElement","text":"Get attribute element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$get_attribute(name, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a live element — WebElement","text":"name name attribute. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"value attribute: string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$get_attribute(\"href\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-get-property-","dir":"Reference","previous_headings":"","what":"Method get_property()","title":"Create a live element — WebElement","text":"Get property element. Properties similar attributes, represent HTML source code page, rather current state DOM.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$get_property(name, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a live element — WebElement","text":"name name property. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"value property: string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$get_property(\"href\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-get-css-value-","dir":"Reference","previous_headings":"","what":"Method get_css_value()","title":"Create a live element — WebElement","text":"Get computed value CSS property.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$get_css_value(name, request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a live element — WebElement","text":"name name CSS property. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"value CSS property: string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$get_css_value(\"color\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-get-text-","dir":"Reference","previous_headings":"","what":"Method get_text()","title":"Create a live element — WebElement","text":"Get text content element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$get_text()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"text content element: string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")$get_text()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-get-tag-name-","dir":"Reference","previous_headings":"","what":"Method get_tag_name()","title":"Create a live element — WebElement","text":"Get tag name element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$get_tag_name()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"tag name element: string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")$get_tag_name()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-get-rect-","dir":"Reference","previous_headings":"","what":"Method get_rect()","title":"Create a live element — WebElement","text":"Get dimensions coordinates element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$get_rect()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"list containing following elements: x: x-coordinate element. y: y-coordinate element. width: width element pixels. height: height element pixels.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-10","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")$get_rect()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-is-enabled-","dir":"Reference","previous_headings":"","what":"Method is_enabled()","title":"Create a live element — WebElement","text":"Check element currently enabled.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$is_enabled()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"boolean value: TRUE FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-11","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$is_enabled()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-computed-role-","dir":"Reference","previous_headings":"","what":"Method computed_role()","title":"Create a live element — WebElement","text":"Get computed role element. role element usually \"generic\", often used elements tag name differs purpose. example, link \"button-like\" nature may \"button\" role.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$computed_role()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-12","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$computed_role()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-computed-label-","dir":"Reference","previous_headings":"","what":"Method computed_label()","title":"Create a live element — WebElement","text":"Get computed label element (.e. text label element points current element).","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$computed_label()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-13","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$computed_label()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-click-","dir":"Reference","previous_headings":"","what":"Method click()","title":"Create a live element — WebElement","text":"Click element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$click()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"element, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-14","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$click()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Create a live element — WebElement","text":"Clear contents text input element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$clear()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"element, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-15","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.google.com\")  session$find_element(using = \"css selector\", value = \"textarea\")$clear()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-send-keys-","dir":"Reference","previous_headings":"","what":"Method send_keys()","title":"Create a live element — WebElement","text":"Send keys element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$send_keys(..., request_body = NULL)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a live element — WebElement","text":"... keys send (strings). Use keys special keys, use key_chord() send keys combinations. request_body list request body parameters pass Selenium server, overriding default body web request","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"element, invisibly.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-16","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.google.com\")  input <- session$find_element(using = \"css selector\", value = \"textarea\")  input$send_keys(\"Hello\")  input$send_keys(key_chord(keys$control, \"a\"), key_chord(keys$control, \"c\"))  input$send_keys(keys$control, \"v\")  input$get_attribute(\"value\")  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-screenshot-","dir":"Reference","previous_headings":"","what":"Method screenshot()","title":"Create a live element — WebElement","text":"Take screenshot element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$screenshot()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"base64-encoded PNG screenshot, string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-17","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$screenshot()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-is-displayed-","dir":"Reference","previous_headings":"","what":"Method is_displayed()","title":"Create a live element — WebElement","text":"Check element displayed. function may work platforms.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$is_displayed()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"boolean.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-18","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$is_displayed()  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-tojson-","dir":"Reference","previous_headings":"","what":"Method toJSON()","title":"Create a live element — WebElement","text":"Convert element JSON. used SeleniumSession$execute_script().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$toJSON()"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Create a live element — WebElement","text":"list, can converted JSON using jsonlite::toJSON().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"examples-19","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"\\dontrun{ session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  result <- session$find_element(using = \"css selector\", value = \"a\")$toJSON()  result  jsonlite::toJSON(result, auto_unbox = TRUE)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Create a live element — WebElement","text":"objects class cloneable method.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a live element — WebElement","text":"","code":"WebElement$clone(deep = FALSE)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a live element — WebElement","text":"deep Whether make deep clone.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/WebElement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a live element — WebElement","text":"","code":"## ------------------------------------------------ ## Method `WebElement$new` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  element <- session$find_element(using = \"css selector\", value = \"#download\")  session$close() }  ## ------------------------------------------------ ## Method `WebElement$shadow_root` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  # Let's create our own Shadow Root using JavaScript session$execute_script(\"   const div = document.createElement('div');   document.body.appendChild(div);   div.attachShadow({mode: 'open'}); \")  element <- session$find_element(using = \"css selector\", value = \"div\")  shadow_root <- element$shadow_root()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$find_element` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  row <- session$find_element(using = \"css selector\", value = \".row\")  logo_container <- row$find_element(using = \"css selector\", value = \"p\")  logo <- logo_container$find_element(using = \"css selector\", value = \"img\")  session$close() }  ## ------------------------------------------------ ## Method `WebElement$find_elements` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  row <- session$find_element(using = \"css selector\", value = \".row\")  links <- row$find_elements(using = \"css selector\", value = \"a\")  session$close() }  ## ------------------------------------------------ ## Method `WebElement$is_selected` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")$is_selected()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$get_attribute` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$get_attribute(\"href\")  session$close() }  ## ------------------------------------------------ ## Method `WebElement$get_property` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$get_property(\"href\")  session$close() }  ## ------------------------------------------------ ## Method `WebElement$get_css_value` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$get_css_value(\"color\")  session$close() }  ## ------------------------------------------------ ## Method `WebElement$get_text` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")$get_text()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$get_tag_name` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")$get_tag_name()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$get_rect` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"#download\")$get_rect()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$is_enabled` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$is_enabled()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$computed_role` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$computed_role()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$computed_label` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$computed_label()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$click` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$click()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$clear` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.google.com\")  session$find_element(using = \"css selector\", value = \"textarea\")$clear()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$send_keys` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.google.com\")  input <- session$find_element(using = \"css selector\", value = \"textarea\")  input$send_keys(\"Hello\")  input$send_keys(key_chord(keys$control, \"a\"), key_chord(keys$control, \"c\"))  input$send_keys(keys$control, \"v\")  input$get_attribute(\"value\")  session$close() }  ## ------------------------------------------------ ## Method `WebElement$screenshot` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$screenshot()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$is_displayed` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  session$find_element(using = \"css selector\", value = \"a\")$is_displayed()  session$close() }  ## ------------------------------------------------ ## Method `WebElement$toJSON` ## ------------------------------------------------  if (FALSE) { session <- SeleniumSession$new()  session$navigate(\"https://www.r-project.org\")  result <- session$find_element(using = \"css selector\", value = \"a\")$toJSON()  result  jsonlite::toJSON(result, auto_unbox = TRUE)  session$close() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_mousedown.html","id":null,"dir":"Reference","previous_headings":"","what":"Press, release or move the mouse — actions_mousedown","title":"Press, release or move the mouse — actions_mousedown","text":"Mouse actions passed actions_stream(). actions_mousedown() represents pressing button mouse, actions_mouseup() represents releasing button. actions_mousemove() represents moving mouse.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_mousedown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Press, release or move the mouse — actions_mousedown","text":"","code":"actions_mousedown(   button = c(\"left\", \"right\", \"middle\"),   width = NULL,   height = NULL,   pressure = NULL,   tangential_pressure = NULL,   tilt_x = NULL,   tilt_y = NULL,   twist = NULL,   altitude_angle = NULL,   azimuth_angle = NULL )  actions_mouseup(   button = c(\"left\", \"right\", \"middle\"),   width = NULL,   height = NULL,   pressure = NULL,   tangential_pressure = NULL,   tilt_x = NULL,   tilt_y = NULL,   twist = NULL,   altitude_angle = NULL,   azimuth_angle = NULL )  actions_mousemove(   x,   y,   duration = NULL,   origin = c(\"viewport\", \"pointer\"),   width = NULL,   height = NULL,   pressure = NULL,   tangential_pressure = NULL,   tilt_x = NULL,   tilt_y = NULL,   twist = NULL,   altitude_angle = NULL,   azimuth_angle = NULL )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_mousedown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Press, release or move the mouse — actions_mousedown","text":"button mouse button press. width 'width' click, number. height 'height' click, number. pressure amount pressure apply click: number 0 1. tangential_pressure number 0 1. tilt_x whole number -90 90. tilt_y whole number -90 90. twist whole number 0 359. altitude_angle number 0 pi/2. azimuth_angle number 0 2*pi. x x coordinate mouse movement. y y coordinate mouse movement. duration duration mouse movement, seconds. origin point x y measured. Can WebElement object, case x y measured center element.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_mousedown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Press, release or move the mouse — actions_mousedown","text":"selenium_action object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_mousedown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Press, release or move the mouse — actions_mousedown","text":"","code":"actions_stream(   actions_mousedown(\"left\", width = 1, height = 1, pressure = 0.5),   actions_mouseup(\"left\", width = 100, height = 50, pressure = 1),   actions_mousemove(x = 1, y = 1, duration = 1, origin = \"pointer\") ) #> [[1]] #> [[1]]$type #> [1] \"pointer\" #>  #> [[1]]$id #> [1] \"899872\" #>  #> [[1]]$actions #> [[1]]$actions[[1]] #> $type #> [1] \"pointerDown\" #>  #> $button #> [1] 0 #>  #> $width #> [1] 1 #>  #> $height #> [1] 1 #>  #> $pressure #> [1] 0.5 #>  #> attr(,\"class\") #> [1] \"selenium_action\"              \"selenium_action_pointer\"      #> [3] \"selenium_action_pointer_down\" #>  #> [[1]]$actions[[2]] #> $type #> [1] \"pointerUp\" #>  #> $button #> [1] 0 #>  #> $width #> [1] 100 #>  #> $height #> [1] 50 #>  #> $pressure #> [1] 1 #>  #> attr(,\"class\") #> [1] \"selenium_action\"            \"selenium_action_pointer\"    #> [3] \"selenium_action_pointer_up\" #>  #> [[1]]$actions[[3]] #> $type #> [1] \"pointerMove\" #>  #> $x #> [1] 1 #>  #> $y #> [1] 1 #>  #> $duration #> [1] 1000 #>  #> $origin #> [1] \"pointer\" #>  #> attr(,\"class\") #> [1] \"selenium_action\"              \"selenium_action_pointer\"      #> [3] \"selenium_action_pointer_move\" #>  #>  #>  #> attr(,\"class\") #> [1] \"selenium_actions_stream\""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_pause.html","id":null,"dir":"Reference","previous_headings":"","what":"Wait for a period of time — actions_pause","title":"Wait for a period of time — actions_pause","text":"pause action passed actions_stream(). Waits given number seconds performing next action stream.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_pause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wait for a period of time — actions_pause","text":"","code":"actions_pause(seconds)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_pause.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wait for a period of time — actions_pause","text":"seconds number seconds wait .","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_pause.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wait for a period of time — actions_pause","text":"selenium_action object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_pause.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wait for a period of time — actions_pause","text":"","code":"actions_stream(   actions_pause(1) ) #> [[1]] #> [[1]]$type #> [1] \"none\" #>  #> [[1]]$id #> [1] \"402190\" #>  #> [[1]]$actions #> [[1]]$actions[[1]] #> $type #> [1] \"pause\" #>  #> $duration #> [1] 1000 #>  #> attr(,\"class\") #> [1] \"selenium_action\"       \"selenium_action_pause\" #>  #>  #>  #> attr(,\"class\") #> [1] \"selenium_actions_stream\""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_press.html","id":null,"dir":"Reference","previous_headings":"","what":"Press or release a key — actions_press","title":"Press or release a key — actions_press","text":"Key actions passed actions_stream(). actions_press() represents pressing key keyboard, actions_release() represents releasing key.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_press.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Press or release a key — actions_press","text":"","code":"actions_press(key)  actions_release(key)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_press.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Press or release a key — actions_press","text":"key key press: string consisting single character. Use keys object use special keys (e.g. Ctrl).","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_press.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Press or release a key — actions_press","text":"selenium_action object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_press.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Press or release a key — actions_press","text":"","code":"actions_stream(   actions_press(\"a\"),   actions_release(\"a\"),   actions_press(keys$enter),   actions_release(keys$enter) ) #> [[1]] #> [[1]]$type #> [1] \"key\" #>  #> [[1]]$id #> [1] \"207482\" #>  #> [[1]]$actions #> [[1]]$actions[[1]] #> $type #> [1] \"keyDown\" #>  #> $value #> [1] \"a\" #>  #> attr(,\"class\") #> [1] \"selenium_action\"       \"selenium_action_key\"   \"selenium_action_press\" #>  #> [[1]]$actions[[2]] #> $type #> [1] \"keyUp\" #>  #> $value #> [1] \"a\" #>  #> attr(,\"class\") #> [1] \"selenium_action\"         \"selenium_action_key\"     #> [3] \"selenium_action_release\" #>  #> [[1]]$actions[[3]] #> $type #> [1] \"keyDown\" #>  #> $value #> [1] \"\" #>  #> attr(,\"class\") #> [1] \"selenium_action\"       \"selenium_action_key\"   \"selenium_action_press\" #>  #> [[1]]$actions[[4]] #> $type #> [1] \"keyUp\" #>  #> $value #> [1] \"\" #>  #> attr(,\"class\") #> [1] \"selenium_action\"         \"selenium_action_key\"     #> [3] \"selenium_action_release\" #>  #>  #>  #> attr(,\"class\") #> [1] \"selenium_actions_stream\""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_scroll.html","id":null,"dir":"Reference","previous_headings":"","what":"Scroll the page — actions_scroll","title":"Scroll the page — actions_scroll","text":"Scroll actions passed actions_stream(). Scroll page given direction.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_scroll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scroll the page — actions_scroll","text":"","code":"actions_scroll(x, y, delta_x, delta_y, duration = NULL, origin = \"viewport\")"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_scroll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scroll the page — actions_scroll","text":"x x coordinate scroll action originates . y y coordinate scroll action originates . delta_x number pixels scroll x direction. delta_y number pixels scroll y direction. duration duration scroll, seconds. origin point x y measured. Can WebElement object, case x y measured center element. Otherwise, origin must \"viewport\".","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_scroll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scroll the page — actions_scroll","text":"selenium_action object.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_scroll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scroll the page — actions_scroll","text":"","code":"actions_stream(   actions_scroll(x = 1, y = 1, delta_x = 1, delta_y = 1, duration = 0.5) ) #> [[1]] #> [[1]]$type #> [1] \"wheel\" #>  #> [[1]]$id #> [1] \"893115\" #>  #> [[1]]$actions #> [[1]]$actions[[1]] #> $type #> [1] \"scroll\" #>  #> $x #> [1] 1 #>  #> $y #> [1] 1 #>  #> $duration #> [1] 500 #>  #> $origin #> [1] \"viewport\" #>  #> $deltaX #> [1] 1 #>  #> $deltaY #> [1] 1 #>  #> attr(,\"class\") #> [1] \"selenium_action\"        \"selenium_action_scroll\" #>  #>  #>  #> attr(,\"class\") #> [1] \"selenium_actions_stream\""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a set of actions to be performed — actions_stream","title":"Create a set of actions to be performed — actions_stream","text":"actions_stream() creates set actions performed SeleniumSession$perform_actions(). Actions low level way interact page.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a set of actions to be performed — actions_stream","text":"","code":"actions_stream(...)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a set of actions to be performed — actions_stream","text":"... selenium_action objects: actions perform.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a set of actions to be performed — actions_stream","text":"selenium_actions_stream object, ready passed SeleniumSession$perform_actions().","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenium-r/reference/actions_stream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a set of actions to be performed — actions_stream","text":"","code":"actions_stream(   actions_press(keys$enter),   actions_pause(0.5),   actions_release(keys$enter),   actions_scroll(x = 1, y = 1, delta_x = 1, delta_y = 1, duration = 0.5),   actions_mousemove(x = 1, y = 1, duration = 1, origin = \"pointer\") ) #> [[1]] #> [[1]]$type #> [1] \"key\" #>  #> [[1]]$id #> [1] \"233462\" #>  #> [[1]]$actions #> [[1]]$actions[[1]] #> $type #> [1] \"keyDown\" #>  #> $value #> [1] \"\" #>  #> attr(,\"class\") #> [1] \"selenium_action\"       \"selenium_action_key\"   \"selenium_action_press\" #>  #> [[1]]$actions[[2]] #> $type #> [1] \"pause\" #>  #> $duration #> [1] 500 #>  #> attr(,\"class\") #> [1] \"selenium_action\"       \"selenium_action_pause\" #>  #> [[1]]$actions[[3]] #> $type #> [1] \"keyUp\" #>  #> $value #> [1] \"\" #>  #> attr(,\"class\") #> [1] \"selenium_action\"         \"selenium_action_key\"     #> [3] \"selenium_action_release\" #>  #>  #>  #> [[2]] #> [[2]]$type #> [1] \"wheel\" #>  #> [[2]]$id #> [1] \"308955\" #>  #> [[2]]$actions #> [[2]]$actions[[1]] #> $type #> [1] \"scroll\" #>  #> $x #> [1] 1 #>  #> $y #> [1] 1 #>  #> $duration #> [1] 500 #>  #> $origin #> [1] \"viewport\" #>  #> $deltaX #> [1] 1 #>  #> $deltaY #> [1] 1 #>  #> attr(,\"class\") #> [1] \"selenium_action\"        \"selenium_action_scroll\" #>  #>  #>  #> [[3]] #> [[3]]$type #> [1] \"pointer\" #>  #> [[3]]$id #> [1] \"409120\" #>  #> [[3]]$actions #> [[3]]$actions[[1]] #> $type #> [1] \"pointerMove\" #>  #> $x #> [1] 1 #>  #> $y #> [1] 1 #>  #> $duration #> [1] 1000 #>  #> $origin #> [1] \"pointer\" #>  #> attr(,\"class\") #> [1] \"selenium_action\"              \"selenium_action_pointer\"      #> [3] \"selenium_action_pointer_move\" #>  #>  #>  #> attr(,\"class\") #> [1] \"selenium_actions_stream\""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/key_chord.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine special keys — key_chord","title":"Combine special keys — key_chord","text":"chord keys passed WebElement$send_keys(), keys pressed order, released end. simply done combining keys single string, appending NULL key (keys$null) end. useful keybindings like Ctrl-V, want Ctrl key released action.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/key_chord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine special keys — key_chord","text":"","code":"key_chord(...)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/key_chord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine special keys — key_chord","text":"... keys combined (strings).","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/key_chord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine special keys — key_chord","text":"string.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/key_chord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine special keys — key_chord","text":"","code":"# `Ctrl-V` will be pressed, then `Ctrl-Alt-V` paste0(   keys$control, \"v\",   keys$alt, \"v\" ) #> [1] \"vv\"  # `Ctrl-V` will be pressed, then `Alt-V` paste0(   key_chord(keys$control, \"v\"),   key_chord(keys$alt, \"v\") ) #> [1] \"vv\""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/keys.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of special keys — keys","title":"A list of special keys — keys","text":"named list special keys, key single Unicode character, interpreted selenium special key. key just string, can used string manipulation functions like paste() without special treatment.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of special keys — keys","text":"","code":"keys"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/keys.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of special keys — keys","text":"object class list length 65.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list of special keys — keys","text":"","code":"keys$enter #> [1] \"\""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium-package.html","id":null,"dir":"Reference","previous_headings":"","what":"selenium: Low-Level Browser Automation Interface — selenium-package","title":"selenium: Low-Level Browser Automation Interface — selenium-package","text":"implementation 'W3C WebDriver 2.0' (https://w3c.github.io/webdriver/), allowing interaction 'Selenium Server' (https://www.selenium.dev/documentation/grid/) instance 'R'. Allows web browser automated 'R'.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"selenium: Low-Level Browser Automation Interface — selenium-package","text":"Maintainer: Ashby Thorpe ashbythorpe@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and start the Selenium server. — selenium_server","title":"Download and start the Selenium server. — selenium_server","text":"Downloads latest release Selenium Server, runs background process. must Java installed command work.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and start the Selenium server. — selenium_server","text":"","code":"selenium_server(   version = \"latest\",   selenium_manager = TRUE,   interactive = TRUE,   temp = TRUE,   path = NULL,   echo_cmd = FALSE,   stdout = NULL,   stderr = NULL,   extra_args = c() )"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and start the Selenium server. — selenium_server","text":"version version Selenium Server download run. default, latest major minor release used. selenium_manager Whether enable Selenium Manager, automatically download missing drivers. Defaults TRUE. interactive default, version downloaded, prompted confirm want download , function error rlang::is_interactive() returns FALSE. allow function work non-interactive setting, set FALSE. temp Whether use temporary directory download Selenium Server .jar file. ensure file deleted used, means redownload file every new R session. FALSE, file saved user data directory. path path downloaded Selenium Server .jar file saved. Overrides temp. echo_cmd, stdout, stderr Passed processx::process$new(). extra_args character vector extra arguments pass Selenium Server call.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and start the Selenium server. — selenium_server","text":"processx::process object. Call <process>$kill() stop server.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and start the Selenium server. — selenium_server","text":"","code":"if (FALSE) { # rlang::is_interactive() server <- selenium_server(interactive = FALSE)  server$kill() }"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Is a selenium server instance running? — selenium_server_available","title":"Is a selenium server instance running? — selenium_server_available","text":"selenium_server_available() returns TRUE Selenium server running given port host. wait_for_selenium_available() waits Selenium server become available given time. get_server_status(), given port host, figures whether Selenium server instance running, , returns status. used selenium_server_available() figure server running.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is a selenium server instance running? — selenium_server_available","text":"","code":"selenium_server_available(port = 4444L, host = \"localhost\", verbose = FALSE)  wait_for_selenium_available(   timeout = 60,   port = 4444L,   host = \"localhost\",   verbose = FALSE,   error = FALSE )  get_server_status(port = 4444L, host = \"localhost\", verbose = FALSE)"},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is a selenium server instance running? — selenium_server_available","text":"port port Selenium server using, can connect . host host Selenium server running . usually 'localhost' (.e. machine). verbose Whether print information web request sent. timeout amount time wait Selenium server become available. error Whether throw error web request throws error timeout exceeded. default, logical value always returned.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is a selenium server instance running? — selenium_server_available","text":"selenium_server_available() returns TRUE Selenium server running, FALSE otherwise, wait_for_selenium_available() returns thing. get_server_status() returns list can (may always) contain following fields: ready: Whether server ready connected . always returned server. message: message status server. uptime: long server running. nodes: Information slots server can take.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/reference/selenium_server_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is a selenium server instance running? — selenium_server_available","text":"","code":"if (FALSE) { get_server_status()  selenium_server_available()  wait_for_selenium_available() }"},{"path":[]},{"path":"https://ashbythorpe.github.io/selenium-r/news/index.html","id":"selenium-012","dir":"Changelog","previous_headings":"","what":"selenium 0.1.2","title":"selenium 0.1.2","text":"CRAN release: 2023-10-28 Add temp argument selenium_server().","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/news/index.html","id":"selenium-011","dir":"Changelog","previous_headings":"","what":"selenium 0.1.1","title":"selenium 0.1.1","text":"Added path argument selenium_server(), allowing file saved custom path. Removed \\dontrun{} one example CRAN resubmission.","code":""},{"path":"https://ashbythorpe.github.io/selenium-r/news/index.html","id":"selenium-010","dir":"Changelog","previous_headings":"","what":"selenium 0.1.0","title":"selenium 0.1.0","text":"Initial CRAN submission.","code":""}]
