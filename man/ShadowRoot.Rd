% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/element.R
\name{ShadowRoot}
\alias{ShadowRoot}
\title{Create a shadow root}
\value{
A \code{ShadowRoot} object.

A \code{WebElement} object.

A list of \code{WebElement} objects.

A list, which can then be converted to JSON using
\code{\link[jsonlite:fromJSON]{jsonlite::toJSON()}}.
}
\description{
Create a live representation of a shadow root object.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{The id of the shadow root.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ShadowRoot-new}{\code{ShadowRoot$new()}}
\item \href{#method-ShadowRoot-find_element}{\code{ShadowRoot$find_element()}}
\item \href{#method-ShadowRoot-find_elements}{\code{ShadowRoot$find_elements()}}
\item \href{#method-ShadowRoot-toJSON}{\code{ShadowRoot$toJSON()}}
\item \href{#method-ShadowRoot-clone}{\code{ShadowRoot$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShadowRoot-new"></a>}}
\if{latex}{\out{\hypertarget{method-ShadowRoot-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new \code{ShadowRoot} object. This should not be called
manually: instead use \code{WebElement$shadow_root()}, or
\code{SeleniumSession$create_shadow_root()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ShadowRoot$new(session_id, req, verbose, id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session_id}}{The id of the session.}

\item{\code{req, verbose}}{Private fields of a \code{SeleniumSession} object.}

\item{\code{id}}{The id of the shadow root.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShadowRoot-find_element"></a>}}
\if{latex}{\out{\hypertarget{method-ShadowRoot-find_element}{}}}
\subsection{Method \code{find_element()}}{
Find an element in the shadow root.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ShadowRoot$find_element(
  using = c("css selector", "xpath", "tag name", "link text", "partial link text"),
  value
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{using}}{The type of selector to use.}

\item{\code{value}}{The value of the selector: a string.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShadowRoot-find_elements"></a>}}
\if{latex}{\out{\hypertarget{method-ShadowRoot-find_elements}{}}}
\subsection{Method \code{find_elements()}}{
Find all elements in a shadow root matching a selector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ShadowRoot$find_elements(
  using = c("css selector", "xpath", "tag name", "link text", "partial link text"),
  value
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{using}}{The type of selector to use.}

\item{\code{value}}{The value of the selector: a string.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShadowRoot-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ShadowRoot-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert an element to JSON. This is used by
\code{\link[=SeleniumSession$execute_script]{SeleniumSession$execute_script()}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ShadowRoot$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShadowRoot-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ShadowRoot-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ShadowRoot$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
